name: Check Docker Hub for New Tags

on:
  schedule:
    - cron: '0 0/12 * * *'  # 每小时检查一次
  workflow_dispatch:      # 允许手动触发

jobs:
  check_new_tag:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Ensure version.txt exists
      run: |
        if [ ! -f version.txt ]; then
          echo "0.0.0" > version.txt
        fi
    - name: Fetch all tags
      run: git fetch --tags
    - name: Get latest tag from Docker Hub
      id: get_latest_tag
      run: |
        LATEST_TAG=$(curl -s https://hub.docker.com/v2/repositories/linuxserver/jellyfin/tags | jq -r '.results[].name' | grep -E '^[0-9]+\.[0-9]+\.[0-9]+$' | sort -V | tail -n 1)
        if [ -z "$LATEST_TAG" ]; then
          echo "Failed to get the latest tag from Docker Hub" >&2
          exit 1
        fi
        echo "LATEST_TAG=${LATEST_TAG}" >> $GITHUB_ENV

    - name: Get current tag from version.txt
      id: get_current_tag
      run: |
        CURRENT_TAG=$(cat version.txt)
        if [ -z "$CURRENT_TAG" ]; then
          echo "Failed to get the current tag from version.txt" >&2
          exit 1
        fi
        echo "CURRENT_TAG=${CURRENT_TAG}" >> $GITHUB_ENV

    - name: Compare tags
      id: compare_tags
      run: |
        if [ "${LATEST_TAG}" != "${CURRENT_TAG}" ]; then
          echo "New tag found: ${LATEST_TAG}"
          echo "new_tag=true" >> $GITHUB_ENV
        else
          echo "No new tag found"
          echo "new_tag=false" >> $GITHUB_ENV
        fi

    - name: Update version.txt
      if: env.new_tag == 'true'
      run: |
        echo "${LATEST_TAG}" > version.txt

    - name: Commit and push changes
      if: env.new_tag == 'true'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        git add version.txt
        git commit -m "Update version to ${LATEST_TAG}"
        git tag ${LATEST_TAG}
        git push origin HEAD --tags

  trigger_docker_publish:
    runs-on: ubuntu-latest
    needs: check_new_tag
    if: failure()  # 仅在 check_new_tag 作业失败时运行
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Get latest Git tag
      id: get_latest_git_tag
      run: |
        LATEST_GIT_TAG=env.CURRENT_TAG
        if [ -z "$LATEST_GIT_TAG" ]; then
          echo "Failed to get the latest Git tag" >&2
          exit 1
        fi
        echo "LATEST_GIT_TAG=${LATEST_GIT_TAG}" >> $GITHUB_ENV

    - name: Trigger Docker Publish Release
      uses: actions/github-script@v6
      with:
        script: |
          github.rest.actions.createWorkflowDispatch({
            owner: context.repo.owner,
            repo: context.repo.repo,
            workflow_id: 'docker-publish.yml',
            ref: 'refs/tags/${{ env.LATEST_GIT_TAG }}'
          })

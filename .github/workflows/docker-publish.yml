name: Docker Publish Release

on:
  push:
    tags: [ '*.*.*' ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@v3.5.0
        with:
          cosign-release: 'v2.2.4'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.0.0

      - name: Log into GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Log into Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3.0.0
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Log into Alibaba Cloud Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3.0.0
        with:
          registry: registry.cn-shanghai.aliyuncs.com
          username: ${{ secrets.ALIYUN_USERNAME }}
          password: ${{ secrets.ALIYUN_PASSWORD }}

      - name: Set Jellyfin Version variable
        run: |
          JELLYFIN_VERSION=$(cat version.txt)
          echo "JELLYFIN_VERSION=$JELLYFIN_VERSION" >> $GITHUB_ENV

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5.0.0
        with:
          images: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
            docker.io/theggs/linuxserver-jellyfin-notofonts
            registry.cn-shanghai.aliyuncs.com/theggs/linuxserver-jellyfin-notofonts
          tags: |
            type=semver,pattern={{version}}

      - name: Build and push Docker images
        uses: docker/build-push-action@v5.0.0
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.version }}
            docker.io/theggs/linuxserver-jellyfin-notofonts:${{ steps.meta.outputs.version }}
            registry.cn-shanghai.aliyuncs.com/theggs/linuxserver-jellyfin-notofonts:${{ steps.meta.outputs.version }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: JELLYFIN_VERSION=${{ env.JELLYFIN_VERSION }}

      - name: Sign the published Docker images
        if: ${{ github.event_name != 'pull_request' }}
        run: |
          for tag in $(echo "${{ steps.meta.outputs.tags }}" | tr ',' '\n' | grep -v 'sha256'); do
            cosign sign --yes $tag
          done
